CSCB58 Project Report: Winter 2019

Team Member A
-------------
First Name: Akathian
Last Name: Santhakumar
Student Number: 1003993798
UofT E-mail Address: akathian.santhakumar@mail.utoronto.ca


Team Member B
-------------
First Name: Ahmad Ali
Last Name: Shah
Student Number: 1004192287
UofT E-mail Address: ahmadali.shah@mail.utoronto.ca

Project Plan
--------

Project Title: Rain


Provide a one paragraph description of your project: 

The game will consist of randomly falling blue rectangles (ie Rain) which the player will have to avoid by moving left or right
in order to score points. Each rain block that reaches the end without the player touching it will be one point.


What is your plan for the first week?
Implement the player block and be able to move it left and right


What is your plan for the second week?
Generate randomly falling rain blocks and implement collision with the player


What is your plan for the third week?
Add scoring feature


What is your backup plan if things donâ€™t work out as planned?



Weekly Reports
--------------
Week 1: 
	We drew out the state diagrams required to draw and move the player block. We coded for the player block but we are stuck at getting the player to move properly. We are planning on researching this further by looking at other similar code that has horizontal moving blocks. 

Week 2:
	We got the player block to move using keys. Each block is controlled by switches for increased difficulty. The player block will move in right while the switch is on, and left while the switch is off. We added a scoring system: whenever the player is moving, their score will accumulate. If they are stationary (i.e. they are at the edges), their score will stop increasing in order to encourgae movement. We were initially having issues displaying the score. It would show the score, but it was being displayed using Hexadecimal. We used the double dabble algorithm to fix this and instead display it in decimal. We then added a second player, in order to make gameplay more interesting. We added a seperate score counter to keep track of the second player.

Week 3:

	The intial stages of the 'rain' or the obstacles are complete now. We managed to get the obstacles fall from the top of the screen and continue vertically till they reach the bottom. The rain then wraps around to the top of the screen. However, instead of hard coding the position of the rain, we aim to add in random positioning. To this end, we managed to implement a pseudo-random number generator. At this point, the generator can create random 8 bit numbers, however the user needs to flip a switch in order for a new random number to be generated. We're trying to figure out how to generate this number automatically and to assign it to the rain so that we can have true randomized obstacles. If that fails, we will just hard code the obstacles. We also have to implement hit detection, but other than that, our project is basically complete.

Week 4:

	Week 4 ended in the culmination of the final project. We got randomized blocks to work. We used the psuedo-random number generator code that we developed last week, and made it so that our program continously generates new random numbers. The blocks fall till they reach the bottom of the screen, before they are reinitialized. We also added hit detection, so now our game is functional. When a player is hit, the game ends and the screen turns the colour of the winning player. That is to say that when the red player gets hit, the screen turns green and similarly when the green player gets hit, the screen turns red. The score keeps incrementing till 1023, and if neither player gets hit, the first player to reach that milestone will win. 

References
----------
<In this space clearly indicate all external sources used in this project. If you used anyone else's code (from previous B58 projects or other sources) clearly indicate what you used and where you found it. Usage of any material not credited in this space will be considered plagiarism. It is absolutely OK and expected to update this section as you progress in the projected.

Make sure to document what you added on top of the existing work, especially if you work with a previous project. What is it that YOU added?>

Moveable character sourced from this link
We changed the size of the player and the way you can move the player: it only stops moving when at ends of the screen, otherwise it is constantly moving
We also added a scoring system and a second player
https://github.com/julesyan/CSCB58-Final-Project/blob/master/project.v

Used this code for the double dabble algorithm. We added code to it so that it can display numbers in the thousands
https://pubweb.eng.utah.edu/~nmcdonal/Tutorials/BCDTutorial/BCDConversion.html

Used 1 line from this for our random number generator. Everything else written in that module is our own code
https://electronics.stackexchange.com/questions/30521/random-bit-sequence-using-verilog

Repo & Video
------------
<At the end of the project, provide links to your code repository and presentation video (and passwords if not public>
https://github.com/Akathian/CSCB58_FinalProject
https://www.youtube.com/watch?v=9n59mADAYR4&feature=youtu.be&fbclid=IwAR1-UqC7gyPG5aiG0iKPH90pk_Xx3PCUMMhruupL0BQW57hahupl8lIB35k


